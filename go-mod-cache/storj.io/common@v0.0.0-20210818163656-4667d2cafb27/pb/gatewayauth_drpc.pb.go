// Code generated by protoc-gen-go-drpc. DO NOT EDIT.
// protoc-gen-go-drpc version: v0.0.23
// source: gatewayauth.proto

package pb

import (
	bytes "bytes"
	context "context"
	errors "errors"

	jsonpb "github.com/gogo/protobuf/jsonpb"
	proto "github.com/gogo/protobuf/proto"

	drpc "storj.io/drpc"
	drpcerr "storj.io/drpc/drpcerr"
)

type drpcEncoding_File_gatewayauth_proto struct{}

func (drpcEncoding_File_gatewayauth_proto) Marshal(msg drpc.Message) ([]byte, error) {
	return proto.Marshal(msg.(proto.Message))
}

func (drpcEncoding_File_gatewayauth_proto) Unmarshal(buf []byte, msg drpc.Message) error {
	return proto.Unmarshal(buf, msg.(proto.Message))
}

func (drpcEncoding_File_gatewayauth_proto) JSONMarshal(msg drpc.Message) ([]byte, error) {
	var buf bytes.Buffer
	err := new(jsonpb.Marshaler).Marshal(&buf, msg.(proto.Message))
	if err != nil {
		return nil, err
	}
	return buf.Bytes(), nil
}

func (drpcEncoding_File_gatewayauth_proto) JSONUnmarshal(buf []byte, msg drpc.Message) error {
	return jsonpb.Unmarshal(bytes.NewReader(buf), msg.(proto.Message))
}

type DRPCGatewayAuthClient interface {
	DRPCConn() drpc.Conn

	RegisterGatewayAccess(ctx context.Context, in *RegisterGatewayAccessRequest) (*RegisterGatewayAccessResponse, error)
}

type drpcGatewayAuthClient struct {
	cc drpc.Conn
}

func NewDRPCGatewayAuthClient(cc drpc.Conn) DRPCGatewayAuthClient {
	return &drpcGatewayAuthClient{cc}
}

func (c *drpcGatewayAuthClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcGatewayAuthClient) RegisterGatewayAccess(ctx context.Context, in *RegisterGatewayAccessRequest) (*RegisterGatewayAccessResponse, error) {
	out := new(RegisterGatewayAccessResponse)
	err := c.cc.Invoke(ctx, "/GatewayAuth/RegisterGatewayAccess", drpcEncoding_File_gatewayauth_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCGatewayAuthServer interface {
	RegisterGatewayAccess(context.Context, *RegisterGatewayAccessRequest) (*RegisterGatewayAccessResponse, error)
}

type DRPCGatewayAuthUnimplementedServer struct{}

func (s *DRPCGatewayAuthUnimplementedServer) RegisterGatewayAccess(context.Context, *RegisterGatewayAccessRequest) (*RegisterGatewayAccessResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

type DRPCGatewayAuthDescription struct{}

func (DRPCGatewayAuthDescription) NumMethods() int { return 1 }

func (DRPCGatewayAuthDescription) Method(n int) (string, drpc.Encoding, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/GatewayAuth/RegisterGatewayAccess", drpcEncoding_File_gatewayauth_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCGatewayAuthServer).
					RegisterGatewayAccess(
						ctx,
						in1.(*RegisterGatewayAccessRequest),
					)
			}, DRPCGatewayAuthServer.RegisterGatewayAccess, true
	default:
		return "", nil, nil, nil, false
	}
}

func DRPCRegisterGatewayAuth(mux drpc.Mux, impl DRPCGatewayAuthServer) error {
	return mux.Register(impl, DRPCGatewayAuthDescription{})
}

type DRPCGatewayAuth_RegisterGatewayAccessStream interface {
	drpc.Stream
	SendAndClose(*RegisterGatewayAccessResponse) error
}

type drpcGatewayAuth_RegisterGatewayAccessStream struct {
	drpc.Stream
}

func (x *drpcGatewayAuth_RegisterGatewayAccessStream) SendAndClose(m *RegisterGatewayAccessResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_gatewayauth_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}
